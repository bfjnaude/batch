// Code generated by MockGen. DO NOT EDIT.
// Source: ./batch.go

// Package batch is a generated GoMock package.
package batch

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockJob is a mock of Job interface.
type MockJob struct {
	ctrl     *gomock.Controller
	recorder *MockJobMockRecorder
}

// MockJobMockRecorder is the mock recorder for MockJob.
type MockJobMockRecorder struct {
	mock *MockJob
}

// NewMockJob creates a new mock instance.
func NewMockJob(ctrl *gomock.Controller) *MockJob {
	mock := &MockJob{ctrl: ctrl}
	mock.recorder = &MockJobMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJob) EXPECT() *MockJobMockRecorder {
	return m.recorder
}

// GetID mocks base method.
func (m *MockJob) GetID() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetID")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetID indicates an expected call of GetID.
func (mr *MockJobMockRecorder) GetID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetID", reflect.TypeOf((*MockJob)(nil).GetID))
}

// MockBatchProcessor is a mock of BatchProcessor interface.
type MockBatchProcessor struct {
	ctrl     *gomock.Controller
	recorder *MockBatchProcessorMockRecorder
}

// MockBatchProcessorMockRecorder is the mock recorder for MockBatchProcessor.
type MockBatchProcessorMockRecorder struct {
	mock *MockBatchProcessor
}

// NewMockBatchProcessor creates a new mock instance.
func NewMockBatchProcessor(ctrl *gomock.Controller) *MockBatchProcessor {
	mock := &MockBatchProcessor{ctrl: ctrl}
	mock.recorder = &MockBatchProcessorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBatchProcessor) EXPECT() *MockBatchProcessorMockRecorder {
	return m.recorder
}

// Process mocks base method.
func (m *MockBatchProcessor) Process(jobs []Job) []JobResult {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Process", jobs)
	ret0, _ := ret[0].([]JobResult)
	return ret0
}

// Process indicates an expected call of Process.
func (mr *MockBatchProcessorMockRecorder) Process(jobs interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Process", reflect.TypeOf((*MockBatchProcessor)(nil).Process), jobs)
}
